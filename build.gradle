import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'org.cadixdev.licenser' version '0.6.1'
  id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
  id 'net.neoforged.gradleutils' version '3.0.0-alpha.10' apply false
}

allprojects {
    apply plugin: 'application'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'net.neoforged.gradleutils'
    if (project.name != 'cli-utils') {
        apply plugin: 'com.github.johnrengelman.shadow'
    }

    group = 'net.neoforged.installertools'
    java {
        withSourcesJar()
        toolchain.languageVersion = JavaLanguageVersion.of(8)
    }

    repositories {
        mavenCentral()
    }

    gradleutils.version {
        branches.suffixBranch()
    }

    version = gradleutils.version
    println("${project.name} version: " + version)

    gradleutils.setupSigning(signAllPublications: true)

    tasks.named('jar', Jar).configure {
        manifest.attributes('Implementation-Version': project.version)
        if (application.mainClass.getOrNull()) {
            manifest.attributes('Main-Class': application.mainClass.get())
        }
    }

    if (project.name != 'cli-utils') {
        tasks.named('shadowJar', ShadowJar).configure {
            archiveClassifier = 'fatjar'
        }
    }
}

base {
    archivesName = 'installertools'
}
application {
    mainClass = 'net.neoforged.installertools.ConsoleTool'
}

license {
  header project.file('LICENSE-header.txt')
  include 'net/neoforged/installertools/**/*.java'
  newLine false
}

dependencies {
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'net.md-5:SpecialSource:1.11.0'
    implementation 'de.siegmar:fastcsv:2.0.0'
    implementation 'net.neoforged:srgutils:1.0.0'
    implementation 'org.ow2.asm:asm-commons:9.3'
    implementation project(':cli-utils')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = base.archivesName.get()

            pom {
                name = 'Installer Tools'
                description = 'A collection of command line tools that are useful for the Forge installer, that are not worth being their own standalone projects.'
            }
        }
    }
}

allprojects {
    publishing {
        publications {
            withType(MavenPublication).configureEach {
                it.pom {
                    rootProject.pomUtils.githubRepo(it, 'InstallerTools')

                    licenses {
                        license {
                            name = 'LGPLv2.1'
                            url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                        }
                    }

                    rootProject.pomUtils.neoForgedDeveloper(it)
                }
            }
        }
        repositories {
            maven gradleutils.publishingMaven
        }
    }
}
